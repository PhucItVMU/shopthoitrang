@model BanHangThoiTrangMVC.Models.ManageLoginsViewModel
@{
    ViewBag.Title = "Manage your external logins";
}

<h2>@ViewBag.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>

@if (Model.CurrentLogins.Count == 0)
{
    <div>
        <p>
            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=313242">this article</a> for details on setting up this ASP.NET application to support logging in via external services.
        </p>
    </div>
}
else
{
    <h4>Registered Logins</h4>
    <table class="table">
        <tbody>
            @foreach (var account in Model.CurrentLogins)
            {
                <tr>
                    <td>@account.LoginProvider</td>
                    <td>
                        @if (ViewBag.ShowRemoveButton)
                        {
                            <form asp-controller="Manage" asp-action="RemoveLogin" asp-route-loginProvider="@account.LoginProvider" asp-route-providerKey="@account.ProviderKey" method="post">
                                <button type="submit" class="btn btn-default" title="Remove this @account.LoginProvider login from your account">Remove</button>
                                @Html.AntiForgeryToken()
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (Model.OtherLogins.Count > 0)
{
    <h4>External Logins</h4>
    <div id="socialLoginList">
        <p>
            @foreach (var provider in Model.OtherLogins)
            {
                <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("ExternalLogin", "Account", new { provider = provider.Name, returnUrl = Url.Page("/Account/Manage/ManageLogins", null, new { area = "Identity" }) })'">@provider.DisplayName</button>
            }
        </p>
    </div>
}
